import { useState } from 'react';
/* eslint-disable @next/next/google-font-display */
/* eslint-disable @next/next/no-page-custom-font */
import Head from 'next/head';
import Box from '@mui/material/Box';
import React from 'react';
import Image from 'next/image';
import Divider from '@mui/material/Divider';

import {
  FormControl,
  FormHelperText,
  InputLabel,
  MenuItem,
  Select,
  TextField,
} from '@mui/material';

import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';
import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';
import { useTranslation } from 'next-i18next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';

import { gql, useMutation } from '@apollo/client';

import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import * as yup from 'yup';

const schema = yup.object().shape({
  email: yup.string().trim().email().required(),
  city: yup.string().trim().required(),
  persona: yup.string().trim().required(),
  type: yup.string().trim(),
  demography: yup.string().trim().required(),
});

const ADD_TO_WAIT_LIST = gql`
  mutation addToWaitlist(
    $city: String!
    $demography: String!
    $email: String!
    $persona: String!
    $type: String!
  ) {
    addMailchimpWaitlist(
      demography: $demography
      email: $email
      city: $city
      type: $type
      persona: $persona
    )
  }
`;
const Home = () => {
  const [open, setOpen] = useState(false);
  const [success, setSuccess] = useState(false);
  const { t } = useTranslation('landing');
  const [addToWaitlistMutation, { data, loading, error }] =
    useMutation(ADD_TO_WAIT_LIST);

  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm({
    resolver: yupResolver(schema),
  });
  const watchPersona = watch('persona');
  const onSubmit = async (data) => {
    await addToWaitlistMutation({
      variables: {
        ...data,
      },
    });
    if (!error) {
      setSuccess(true);
    }
  };

  return (
    <>
      <Head>
        <title>Sliike</title>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <main>
        <div className='container'>
          <div className='section-one'>
            <div>
              <div className={'first-write-up'}>{t('title')}</div>
              <div className={'second-write-up'}>{t('back')}</div>
            </div>
            <div className={'buttonCon'}>
              <button onClick={() => setOpen(true)} className={'Button'}>
                <div>
                  <div>Tap for more</div>
                  <ArrowDownwardIcon />
                </div>
              </button>
            </div>
            <div className={`popup ${open ? 'open' : 'close'}`}>
              <div className={'expectCon'}>
                <div className={'expect'}>
                  What to <span className={'expectItems'}>EXPECT</span> on our{' '}
                  <span className={'expectItems'}>UPGRADED APP</span>
                </div>
              </div>
              <div className={'phoneComponents'}>
                <div className={'phone'}>
                  <div>
                    <div className={'components'}>
                      <Image
                        src='/img/ellipse.png'
                        alt='sliike Logo'
                        width='13px'
                        height='13px'
                      />
                      <span className={'expectations'}>
                      {t('marketPlace')}
                      </span>
                    </div>
                    <div className={'components'}>
                      <Image
                        src='/img/ellipse.png'
                        alt='sliike Logo'
                        width='13px'
                        height='13px'
                      />
                      <span className={'expectations'}>
                      {t('moreClients')}
                      </span>
                    </div>
                    <div className={'components'}>
                      <Image
                        src='/img/ellipse.png'
                        alt='sliike Logo'
                        width='13px'
                        height='13px'
                      />
                      <span className={'expectations'}>
                      {t('frictionLess')}
                      </span>
                    </div>
                    <div className={'components'}>
                      <Image
                        src='/img/ellipse.png'
                        alt='sliike Logo'
                        width='13px'
                        height='13px'
                      />
                      <span className={'expectations'}>
                      {t('engaging')}
                      </span>
                    </div>
                  </div>
                </div>
              </div>

              <div className={'buttonCon2'}>
                <button onClick={() => setOpen(false)} className={'Button'}>
                  <div>
                    <ArrowUpwardIcon />
                    <div>Back to Top</div>
                  </div>
                </button>
              </div>
            </div>
          </div>
          <div className={'sectionTwo'}>
            <div>
              <div className={'logo'}>
                <Image
                  src='/Sliike.svg'
                  alt='sliike Logo'
                  width='89px'
                  height='47px'
                />
              </div>
              <div>
                <Image
                  src='/img/Ellipse.svg'
                  alt='sliike Logo'
                  width='8px'
                  height='8px'
                />
                <span className={'contents'}>{t('client')}</span>
              </div>
              <div>
                <Image
                  src='/img/Ellipse.svg'
                  alt='sliike Logo'
                  width='8px'
                  height='8px'
                />
                <span className={'contents'}>{t('beautician')}</span>
              </div>

              <div className={'formContainer'}>
                <div className={'form'}>
                  {success === true ? (
                    <div>
                      <Image
                        src='/img/checked.png'
                        alt='sliike Logo'
                        width='50px'
                        height='50px'
                        className='success-img'
                      />
                      <p className='success-text'>
                        {t('thankYou')}
                      </p>
                    </div>
                  ) : (
                    <>
                      {/* <div className={'formWriteUp'}>
                        <span className={'writeUpColor'}>Stay connected </span>
                        and recieve a savings of{' '}
                        <span className={'writeUpColor'}>20%</span> on your
                        first transaction when we return
                        </div> */}
                      <div className={'formWriteUp'}>
                        {t('stayConnected')}
                      </div>
                      <Divider />
                      <br />
                      <div>
                        <form onSubmit={handleSubmit(onSubmit)}>
                          <Box className='mb-8'>
                            <TextField
                              label={t('email')}
                              variant='standard'
                              sx={{ minWidth: 335 }}
                              {...register('email')}
                              error={!!errors?.email?.message}
                              helperText={errors?.email?.message}
                            />
                          </Box>

                          <Box className='mb-8'>
                            <TextField
                              label={t('city')}
                              variant='standard'
                              sx={{ minWidth: 335 }}
                              {...register('city')}
                              error={!!errors?.city?.message}
                              helperText={errors?.city?.message}
                            />
                          </Box>
                          <FormControl
                            variant='standard'
                            sx={{ m: 1, minWidth: 335, margin: 0 }}
                            error={!!errors?.persona}
                            className='mb-8'
                          >
                            <InputLabel id='demo-simple-select-standard-label'>
                            {t('persona')}
                            </InputLabel>
                            <Select
                              className='text-align-left'
                              {...register('persona')}
                              error={!!errors?.persona?.message}
                            >
                              <MenuItem value={'client'}>{t('personaClient')}</MenuItem>
                              <MenuItem value={'beautician'}>
                              {t('personaBeautician')}
                              </MenuItem>
                            </Select>
                            {!!errors?.persona && (
                              <FormHelperText>
                                {errors?.persona?.message}
                              </FormHelperText>
                            )}
                          </FormControl>
                          {watchPersona === 'beautician' && (
                            <FormControl
                              variant='standard'
                              sx={{ m: 0.5, minWidth: 335, margin: 0 }}
                              error={!!errors?.type}
                              className='mb-8'
                            >
                              <InputLabel id='demo-simple-select-standard-label'>
                              {t('type')}
                              </InputLabel>
                              <Select
                                className='text-align-left'
                                {...register('type')}
                                error={!!errors?.type?.message}
                              >
                                <MenuItem value={'Independent'}>
                                {t('independent')}
                                </MenuItem>
                                <MenuItem value={'Salon Owner'}>
                                {t('saloonOwner')}
                                </MenuItem>
                              </Select>
                              {!!errors?.type && (
                                <FormHelperText>
                                  {errors?.type?.message}
                                </FormHelperText>
                              )}
                            </FormControl>
                          )}

                          <FormControl
                            variant='standard'
                            sx={{ m: 1, minWidth: 335, margin: 0 }}
                            error={!!errors?.demography}
                            className='mb-8'
                          >
                            <InputLabel id='demo-simple-select-standard-label'>
                            {t('demography')}
                            </InputLabel>
                            <Select
                              labelId='demo-simple-select-standard-label'
                              {...register('demography')}
                              error={!!errors?.demography?.message}
                              className='text-align-left'
                            >
                              <MenuItem value={'Afro-Caribbean'}>
                              {t('afroCaribbean')}
                              </MenuItem>
                              <MenuItem value={'Hispanic or Latino'}>
                              {t('hispanicLatino')}
                              </MenuItem>
                              <MenuItem value={'Indian (Indigenous People)'}>
                              {t('indian')}
                              </MenuItem>
                              <MenuItem value={'Asian (Canadian)'}>
                                  {t('asian')}
                              </MenuItem>
                              <MenuItem
                                value={'White (Canada – not Hispanic/Latino)'}
                              >
                                {t('white')}
                              </MenuItem>
                              <MenuItem
                                value={'Mixed race (Canada – Hispanic/Latino)'}
                              >
                              {t('mixed')}
                              </MenuItem>
                              <MenuItem value={'Prefer not to share'}>
                              {t('notShare')}
                              </MenuItem>
                            </Select>
                            {!!errors?.demography?.message && (
                              <FormHelperText>
                                {errors?.demography?.message}
                              </FormHelperText>
                            )}
                          </FormControl>
                          <input
                            type='submit'
                            value={t('submit')}
                            className={'subBotton'}
                          />
                        </form>
                      </div>
                    </>
                  )}
                </div>
              </div>

              <div className={'socialMeadiaCon'}>
                <div className={'socialMeadia'}>
                  <a href="https://www.facebook.com/Sliikeapp" target="_blank" rel="noreferrer">
                    <Image
                      src='/img/Facebooks.svg'
                      alt='sliike Logo'
                      width='35px'
                      height='35px'
                    />
                  </a>
                  <a href="https://instagram.com/sliike.app?utm_medium=copy_link" target="_blank" rel="noreferrer">

                    <Image
                      src='/img/Instagram_white.svg'
                      alt='sliike Logo'
                      width='35px'
                      height='35px'
                    />
                  </a>
                  <a href="#" target="_blank" rel="noreferrer">

                    <Image
                      src='/img/Twitters.svg'
                      alt='sliike Logo'
                      width='35px'
                      height='35px'
                    />
                  </a>
                  <a href="#" target="_blank" rel="noreferrer">
                    <Image
                      src='/img/TikTok.svg'
                      alt='sliike Logo'
                      width='35px'
                      height='35px'
                    />
                  </a>
                </div>
              </div>

              <div className={'emailCon'}>{t('email')}:connect@sliike.com</div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export const getStaticProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale, ['landing'])),
  },
});

export default Home;
